(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Colors = void 0;
// AUTO-GENERATED. DO NOT EDIT.
// SEE generate-color-mappings.js
var Colors;
(function (Colors) {
    var colorMap = new Map();
    function getColorName(hexCode) {
        var colorName = colorMap.get(hexCode.toLowerCase());
        return (typeof colorName == "undefined") ? "" : colorName;
    }
    Colors.getColorName = getColorName;
    colorMap.set("00ffff", "aqua");
    colorMap.set("f0f8ff", "aliceblue");
    colorMap.set("faebd7", "antiquewhite");
    colorMap.set("000000", "black");
    colorMap.set("0000ff", "blue");
    colorMap.set("00ffff", "cyan");
    colorMap.set("00008b", "darkblue");
    colorMap.set("008b8b", "darkcyan");
    colorMap.set("006400", "darkgreen");
    colorMap.set("00ced1", "darkturquoise");
    colorMap.set("00bfff", "deepskyblue");
    colorMap.set("008000", "green");
    colorMap.set("00ff00", "lime");
    colorMap.set("0000cd", "mediumblue");
    colorMap.set("00fa9a", "mediumspringgreen");
    colorMap.set("000080", "navy");
    colorMap.set("00ff7f", "springgreen");
    colorMap.set("008080", "teal");
    colorMap.set("191970", "midnightblue");
    colorMap.set("1e90ff", "dodgerblue");
    colorMap.set("20b2aa", "lightseagreen");
    colorMap.set("228b22", "forestgreen");
    colorMap.set("2e8b57", "seagreen");
    colorMap.set("2f4f4f", "darkslategray");
    colorMap.set("2f4f4f", "darkslategrey");
    colorMap.set("32cd32", "limegreen");
    colorMap.set("3cb371", "mediumseagreen");
    colorMap.set("40e0d0", "turquoise");
    colorMap.set("4169e1", "royalblue");
    colorMap.set("4682b4", "steelblue");
    colorMap.set("483d8b", "darkslateblue");
    colorMap.set("48d1cc", "mediumturquoise");
    colorMap.set("4b0082", "indigo");
    colorMap.set("556b2f", "darkolivegreen");
    colorMap.set("5f9ea0", "cadetblue");
    colorMap.set("6495ed", "cornflowerblue");
    colorMap.set("66cdaa", "mediumaquamarine");
    colorMap.set("696969", "dimgray");
    colorMap.set("696969", "dimgrey");
    colorMap.set("6a5acd", "slateblue");
    colorMap.set("6b8e23", "olivedrab");
    colorMap.set("708090", "slategray");
    colorMap.set("708090", "slategrey");
    colorMap.set("778899", "lightslategray");
    colorMap.set("778899", "lightslategrey");
    colorMap.set("7b68ee", "mediumslateblue");
    colorMap.set("7cfc00", "lawngreen");
    colorMap.set("7fffd4", "aquamarine");
    colorMap.set("7fff00", "chartreuse");
    colorMap.set("808080", "gray");
    colorMap.set("808080", "grey");
    colorMap.set("800000", "maroon");
    colorMap.set("808000", "olive");
    colorMap.set("800080", "purple");
    colorMap.set("87cefa", "lightskyblue");
    colorMap.set("87ceeb", "skyblue");
    colorMap.set("8a2be2", "blueviolet");
    colorMap.set("8b008b", "darkmagenta");
    colorMap.set("8b0000", "darkred");
    colorMap.set("8b4513", "saddlebrown");
    colorMap.set("8fbc8f", "darkseagreen");
    colorMap.set("90ee90", "lightgreen");
    colorMap.set("9370db", "mediumpurple");
    colorMap.set("9400d3", "darkviolet");
    colorMap.set("98fb98", "palegreen");
    colorMap.set("9932cc", "darkorchid");
    colorMap.set("9acd32", "yellowgreen");
    colorMap.set("a0522d", "sienna");
    colorMap.set("a52a2a", "brown");
    colorMap.set("a9a9a9", "darkgray");
    colorMap.set("a9a9a9", "darkgrey");
    colorMap.set("adff2f", "greenyellow");
    colorMap.set("add8e6", "lightblue");
    colorMap.set("afeeee", "paleturquoise");
    colorMap.set("b0c4de", "lightsteelblue");
    colorMap.set("b0e0e6", "powderblue");
    colorMap.set("b22222", "firebrick");
    colorMap.set("b8860b", "darkgoldenrod");
    colorMap.set("ba55d3", "mediumorchid");
    colorMap.set("bc8f8f", "rosybrown");
    colorMap.set("bdb76b", "darkkhaki");
    colorMap.set("c0c0c0", "silver");
    colorMap.set("c71585", "mediumvioletred");
    colorMap.set("cd5c5c", "indianred");
    colorMap.set("cd853f", "peru");
    colorMap.set("d2691e", "chocolate");
    colorMap.set("d2b48c", "tan");
    colorMap.set("d3d3d3", "lightgray");
    colorMap.set("d3d3d3", "lightgrey");
    colorMap.set("d8bfd8", "thistle");
    colorMap.set("daa520", "goldenrod");
    colorMap.set("da70d6", "orchid");
    colorMap.set("db7093", "palevioletred");
    colorMap.set("dc143c", "crimson");
    colorMap.set("dcdcdc", "gainsboro");
    colorMap.set("dda0dd", "plum");
    colorMap.set("deb887", "burlywood");
    colorMap.set("e0ffff", "lightcyan");
    colorMap.set("e6e6fa", "lavender");
    colorMap.set("e9967a", "darksalmon");
    colorMap.set("eee8aa", "palegoldenrod");
    colorMap.set("ee82ee", "violet");
    colorMap.set("f0ffff", "azure");
    colorMap.set("f0fff0", "honeydew");
    colorMap.set("f0e68c", "khaki");
    colorMap.set("f08080", "lightcoral");
    colorMap.set("f4a460", "sandybrown");
    colorMap.set("f5f5dc", "beige");
    colorMap.set("f5fffa", "mintcream");
    colorMap.set("f5deb3", "wheat");
    colorMap.set("f5f5f5", "whitesmoke");
    colorMap.set("f8f8ff", "ghostwhite");
    colorMap.set("fafad2", "lightgoldenrodyellow");
    colorMap.set("faf0e6", "linen");
    colorMap.set("fa8072", "salmon");
    colorMap.set("fdf5e6", "oldlace");
    colorMap.set("ffe4c4", "bisque");
    colorMap.set("ffebcd", "blanchedalmond");
    colorMap.set("ff7f50", "coral");
    colorMap.set("fff8dc", "cornsilk");
    colorMap.set("ff8c00", "darkorange");
    colorMap.set("ff1493", "deeppink");
    colorMap.set("fffaf0", "floralwhite");
    colorMap.set("ff00ff", "fuchsia");
    colorMap.set("ffd700", "gold");
    colorMap.set("ff69b4", "hotpink");
    colorMap.set("fffff0", "ivory");
    colorMap.set("fff0f5", "lavenderblush");
    colorMap.set("fffacd", "lemonchiffon");
    colorMap.set("ffb6c1", "lightpink");
    colorMap.set("ffa07a", "lightsalmon");
    colorMap.set("ffffe0", "lightyellow");
    colorMap.set("ff00ff", "magenta");
    colorMap.set("ffe4e1", "mistyrose");
    colorMap.set("ffe4b5", "moccasin");
    colorMap.set("ffdead", "navajowhite");
    colorMap.set("ffa500", "orange");
    colorMap.set("ff4500", "orangered");
    colorMap.set("ffefd5", "papayawhip");
    colorMap.set("ffdab9", "peachpuff");
    colorMap.set("ffc0cb", "pink");
    colorMap.set("ff0000", "red");
    colorMap.set("fff5ee", "seashell");
    colorMap.set("fffafa", "snow");
    colorMap.set("ff6347", "tomato");
    colorMap.set("ffffff", "white");
    colorMap.set("ffff00", "yellow");
    colorMap.set("663399", "rebeccapurple");
})(Colors = exports.Colors || (exports.Colors = {}));

},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const image_processing_1 = require("./image-processing");
const table_view_1 = require("./table-view");
var ColorSplitter;
(function (ColorSplitter) {
    let ViewModel;
    (function (ViewModel) {
    })(ViewModel || (ViewModel = {}));
    let Controller;
    (function (Controller) {
        var colors;
        var page = 1;
        var colorsPerPage = 100;
        var colorTable = document.getElementById("colorTable"), curPage = document.getElementById("curPage"), numberOfPages = document.getElementById("numberOfPages"), previewImage = document.getElementById("previewImage");
        function processImageFile() {
            if (this.files.length < 1) {
                return;
            }
            previewImage.classList.remove("placeholder");
            image_processing_1.ImageProcessing.fileToDataURL(this.files[0], (dataURL) => {
                previewImage.onload = function () {
                    colors = image_processing_1.ImageProcessing.collectColors(image_processing_1.ImageProcessing.imageToImageData(previewImage));
                    page = 1;
                    numberOfPages.innerText = Math.ceil(colors.size / colorsPerPage).toString();
                    showCurrentPage();
                };
                previewImage.src = dataURL;
            });
        }
        function showCurrentPage() {
            var prevColorRows = colorTable.querySelectorAll("tbody tr");
            for (var i = 0, len = prevColorRows.length; i < len; i++) {
                var prevColorRow = prevColorRows.item(i);
                prevColorRow.parentNode.removeChild(prevColorRow);
            }
            var from = (page - 1) * colorsPerPage;
            var to = from + colorsPerPage;
            table_view_1.TableView.showTable(colorTable, colors, from, to);
            curPage.innerText = page.toString();
        }
        function movePage(step) {
            return function () {
                page += step;
                showCurrentPage();
            };
        }
        function initEventListeners() {
            document.getElementById("imageFile").addEventListener("change", processImageFile);
            document.getElementById("nextPage").addEventListener("click", movePage(1));
            document.getElementById("prevPage").addEventListener("click", movePage(-1));
            document.getElementById("next20Page").addEventListener("click", movePage(20));
        }
        function init() {
            initEventListeners();
        }
        Controller.init = init;
    })(Controller = ColorSplitter.Controller || (ColorSplitter.Controller = {}));
})(ColorSplitter || (ColorSplitter = {}));
ColorSplitter.Controller.init();

},{"./image-processing":3,"./table-view":4}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImageProcessing = void 0;
var ImageProcessing;
(function (ImageProcessing) {
    function drawImageInCanvas(image) {
        var canvas = document.createElement("canvas");
        canvas.width = image.naturalWidth;
        canvas.height = image.naturalHeight;
        var ctx = canvas.getContext("2d");
        ctx.drawImage(image, 0, 0);
        return ctx;
    }
    function fileToDataURL(file, callback) {
        var reader = new FileReader();
        reader.addEventListener("load", function fileRead() {
            callback(reader.result);
        });
        reader.readAsDataURL(file);
    }
    ImageProcessing.fileToDataURL = fileToDataURL;
    function imageToImageData(image) {
        return drawImageInCanvas(image).getImageData(0, 0, image.naturalWidth, image.naturalHeight);
    }
    ImageProcessing.imageToImageData = imageToImageData;
    function collectColors(imageData) {
        var w = imageData.width, h = imageData.height, data = imageData.data, colors = new Set();
        for (var y = 0; y < h; y++) {
            for (var x = 0; x < w; x++) {
                var offset = (y * w + x) * 4;
                var color = data[offset];
                color += data[offset + 1] * 1000;
                color += data[offset + 2] * 1000000;
                color += data[offset + 3] * 1000000000;
                colors.add(color);
            }
        }
        return colors;
    }
    ImageProcessing.collectColors = collectColors;
})(ImageProcessing = exports.ImageProcessing || (exports.ImageProcessing = {}));

},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TableView = void 0;
const colors_1 = require("./colors");
var TableView;
(function (TableView) {
    function colorToHex(color) {
        return color.map((component) => ("0" + component.toString(16)).slice(-2).toLocaleUpperCase()).join("");
    }
    function colorToRgba(color) {
        var str = color.toString();
        return [
            +str.substr(-3),
            +str.substr(-6, 3),
            +str.substr(-9, 3),
            +str.substr(0, 3)
        ];
    }
    function rgbaToCss(color) {
        return "rgba(" + color.join(",") + ")";
    }
    function buildRow(color) {
        var rawRgbaColor = colorToRgba(color), hexCode = colorToHex(rawRgbaColor), colorName = "";
        // Only show a color name if opacity == 1
        // because the alpha channel isn't used for searching in the lookup table
        if (rawRgbaColor[3] == 1) {
            colorName = colors_1.Colors.getColorName(hexCode.substring(0, hexCode.length - 2));
        }
        return "<tr>" +
            "<td class='colorSample' style='background-color: " + rgbaToCss(rawRgbaColor) + "'></td>" +
            "<td>" +
            rawRgbaColor.join(",") +
            "</td>" +
            "<td>" +
            hexCode +
            "</td>" +
            "<td>" +
            colorName +
            "</td>" +
            "</tr>";
    }
    function paginateTable(rows, rowsPerPage) {
        return Math.floor(rows / rowsPerPage);
    }
    TableView.paginateTable = paginateTable;
    function showTable(table, colors, from, to) {
        var i = 0;
        var ARR_SIZE = 1000;
        var arr = new Array(ARR_SIZE);
        var j = 0;
        var iter = colors[Symbol.iterator]();
        var color;
        var tbody = table.querySelector("tbody");
        // TypeScript doesn't support iterators and for..of yet!
        while (!(color = iter.next()).done) {
            i++;
            if (i < from) {
                continue;
            }
            else if (i > to) {
                break;
            }
            arr[j++] = buildRow(color.value);
            if (j % ARR_SIZE == 0) {
                tbody.insertAdjacentHTML("beforeend", arr.join(""));
                j = 0;
            }
        }
        tbody.insertAdjacentHTML("beforeend", arr.join(""));
    }
    TableView.showTable = showTable;
})(TableView = exports.TableView || (exports.TableView = {}));

},{"./colors":1}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
